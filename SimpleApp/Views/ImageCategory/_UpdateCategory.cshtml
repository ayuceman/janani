@model ImageCategoryModel
<span style="color:red;" id="createError"></span>
<div class="form-group">
    @Html.LabelFor(m => m.Name, "Category")
    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter category name" })
    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Description, "Category Description")
    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter category description", style = "width: 450px; height: 200px;" })
    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-primary" onclick="updateCategory(@Model.Id)">Update</button>
    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">Close</button>
</div>

<script>

    function updateCategory(id) {
        var dataToPost = {
            Name: $('input[name="Name"]').val(),
            Description: $('textarea[name="Description"]').val(),
            Id:id
        };
        $.ajax({
            url: '@Url.Action("UpdateCategory", "ImageCategory")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(dataToPost),
            success: function (response) {
                if (response.success) {
                    var url = '@Url.Action("Index", "ImageCategory")';
                    window.location.href = url;
                } else {
                    $("#createError").html(response.errors[0]);
                }
            },
            error: function () {
                return false;
            }
        });
    }

</script>